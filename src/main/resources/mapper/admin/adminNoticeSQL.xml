<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="adminNotice">
	<!-- ********** CEO Notice SQL ********** -->
	<select id="getCeoNoticeCount" resultType="_int">
		SELECT count(*) FROM ceo_notice
	</select>

	<select id="getSearchCeoNoticeCount" parameterType="HashMap" resultType="_int">
		SELECT count(*) FROM ceo_notice WHERE
		<choose>
			<when test="searchCategory.equals('noticeTitle')">
				ceo_notice_title LIKE '%'||#{search}||'%'
			</when>
			<when test="searchCategory.equals('noticeWriter')">
				user_id LIKE '%'||#{search}||'%'
			</when>
		</choose>
	</select>

	<select id="selectCeoNotice" parameterType="_int" resultType="ceoNotice">
		SELECT
		ceo_notice_no AS ceoNoticeNo,
		user_id AS userId,
		ceo_notice_title AS
		ceoNoticeTitle,
		ceo_notice_contents AS ceoNoticeContents,
		ceo_notice_date AS ceoNoticeDate,
		ceo_notice_filename AS ceoNoticeFileName,
		ceo_notice_filepath AS ceoNoticeFilePath
		FROM ceo_notice WHERE
		ceo_notice_no = #{_parameter}
	</select>

	<select id="selectCeoNoticeList" parameterType="HashMap" resultType="ceoNotice">
		SELECT * FROM (SELECT ROWNUM AS rNum, n.* FROM(
		SELECT
		ceo_notice_no AS
		ceoNoticeNo,
		user_id AS userId,
		ceo_notice_title AS ceoNoticeTitle,
		ceo_notice_contents AS ceoNoticeContents,
		ceo_notice_date AS ceoNoticeDate,
		ceo_notice_filename
		AS ceoNoticeFileName,
		ceo_notice_filepath AS ceoNoticeFilePath
		FROM ceo_notice
		ORDER BY 1 DESC)n) WHERE rNum BETWEEN #{start} AND
		#{end}
	</select>

	<select id="searchCeoNoticeList" parameterType="HashMap" resultType="ceoNotice">
		SELECT * FROM (SELECT ROWNUM AS rNum, n.* FROM(
		SELECT
		ceo_notice_no AS
		ceoNoticeNo,
		user_id AS userId,
		ceo_notice_title AS ceoNoticeTitle,
		ceo_notice_contents AS ceoNoticeContents,
		ceo_notice_date AS ceoNoticeDate,
		ceo_notice_filename
		AS ceoNoticeFileName,
		ceo_notice_filepath AS
		ceoNoticeFilePath
		FROM ceo_notice WHERE
		<choose>
			<when test="searchCategory.equals('noticeTitle')">
				ceo_notice_title LIKE '%'||#{search}||'%'
			</when>
			<when test="searchCategory.equals('noticeWriter')">
				user_id LIKE '%'||#{search}||'%'
			</when>
		</choose>
		ORDER BY 1 DESC)n) WHERE rNum BETWEEN ${start} AND
		${end}
	</select>

	<insert id="insertNotice" parameterType="notice">
		<if test="userCategory.equals('ceo')">
			INSERT INTO ceo_notice VALUES (
			ceo_notice_seq.NEXTVAL,
			#{noticeTitle},
			#{userId},
			TO_CHAR(sysdate, 'yyyy-mm-dd'),
			#{noticeContents},
			#{noticeFileName},
			#{noticeFilePath}
			)
		</if>
		<if test="userCategory.equals('client')">
			INSERT INTO client_notice VALUES (
			client_notice_seq.NEXTVAL,
			#{noticeTitle},
			#{userId},
			TO_CHAR(sysdate, 'yyyy-mm-dd'),
			#{noticeContents},
			#{noticeFileName},
			#{noticeFilePath}
			)
		</if>
	</insert>

	<update id="updateCeoNotice" parameterType="ceoNotice">
		UPDATE ceo_notice SET
		ceo_notice_title = #{ceoNoticeTitle},
		ceo_notice_contents =
		#{ceoNoticeContents},
		ceo_notice_filename = #{ceoNoticeFileName},
		ceo_notice_filepath = #{ceoNoticeFilePath}
		WHERE ceo_notice_no = #{ceoNoticeNo}
	</update>

	<delete id="deleteCeoNotice" parameterType="_int">
		DELETE FROM ceo_notice WHERE ceo_notice_no = #{_parameter}
	</delete>

	<!-- ********** Client Notice SQL ********** -->
	<select id="getClientNoticeCount" resultType="_int">
		SELECT count(*) FROM client_notice
	</select>

	<select id="getSearchClientNoticeCount" parameterType="HashMap" resultType="_int">
		SELECT count(*) FROM client_notice WHERE
		<choose>
			<when test="searchCategory.equals('noticeTitle')">
				client_notice_title LIKE '%'||#{search}||'%'
			</when>
			<when test="searchCategory.equals('noticeWriter')">
				user_id LIKE '%'||#{search}||'%'
			</when>
		</choose>
	</select>

	<select id="selectClientNotice" parameterType="_int" resultType="clientNotice">
		SELECT
		client_notice_no AS clientNoticeNo,
		user_id AS userId,
		client_notice_title AS clientNoticeTitle,
		client_notice_contents AS clientNoticeContents,
		client_notice_date AS clientNoticeDate,
		client_notice_filename AS clientNoticeFileName,
		client_notice_filepath AS clientNoticeFilePath
		FROM client_notice WHERE client_notice_no =
		#{_parameter}
	</select>

	<select id="selectClientNoticeList" parameterType="HashMap" resultType="clientNotice">
		SELECT * FROM (SELECT ROWNUM as rNum, n.* FROM (
		SELECT
		client_notice_no
		AS clientNoticeNo,
		user_id AS userId,
		client_notice_title AS
		clientNoticeTitle,
		client_notice_contents AS clientNoticeContents,
		client_notice_date AS
		clientNoticeDate,
		client_notice_filename AS
		clientNoticeFileName,
		client_notice_filepath AS clientNoticeFilePath
		FROM client_notice ORDER BY 1 DESC
		)n)
		WHERE rNum BETWEEN
		#{start} AND #{end}
	</select>

	<select id="searchClientNoticeList" parameterType="HashMap" resultType="clientNotice">
		SELECT * FROM (SELECT ROWNUM AS rNum, n.* FROM (
		SELECT
		client_notice_no AS clientNoticeNo,
		user_id AS userId,
		client_notice_title AS clientNoticeTitle,
		client_notice_contents AS clientNoticeContents,
		client_notice_date AS clientNoticeDate,
		client_notice_fileName AS clientNoticeFileName,
		client_notice_filePath AS clientNoticeFilePath
		FROM
		client_notice WHERE
		<choose>
			<when test="searchCategory.equals('noticeTitle')">
				client_notice_title LIKE '%'||#{search}||'%'
			</when>
			<when test="searchCategory.equals('noticeWriter')">
				user_id LIKE '%'||#{search}||'%'
			</when>
		</choose>
		ORDER BY 1 DESC
		)n) WHERE rNum BETWEEN ${start} AND ${end}
	</select>

	<update id="updateClientNotice" parameterType="clientNotice">
		UPDATE client_notice SET
		client_notice_title = #{clientNoticeTitle},
		client_notice_contents =
		#{clientNoticeContents},
		client_notice_filename = #{clientNoticeFileName},
		client_notice_filepath = #{clientNoticeFilePath}
		WHERE client_notice_no =
		#{clientNoticeNo}
	</update>

	<delete id="deleteClientNotice" parameterType="_int">
		DELETE FROM client_notice WHERE client_notice_no = #{_parameter}
	</delete>
</mapper>
